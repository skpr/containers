version: 2.1

executors:
  amd64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium

  arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium

platforms: &platforms
  - amd64
  - arm64

dirs: &dirs
  - php
  - clamav
  - kubebuilder
  - nginx
  - node
  - mysql
  - opensearch

php_versions: &php_versions
  - "7.4"
  - "8.0"
  - "8.1"

solr_search_api_versions: &solr_search_api_versions
  - 3.x
  - 4.x

jobs:
  build:
    parameters:
      executor:
        type: string
      dir:
        type: string
      version:
        type: string
        default: ""
    machine: true
    executor: << parameters.executor >>
    steps:
      - checkout
      - run:
          name: "Install: Container Structure Tests"
          command: |
            curl -LO https://storage.googleapis.com/container-structure-test/v1.11.0/container-structure-test-linux-<< parameters.executor >> && \
            mv container-structure-test-linux-<< parameters.executor >> container-structure-test && \
            chmod +x container-structure-test && \
            sudo mv container-structure-test /usr/local/bin/
      - run:
          name: "Build: Base Image"
          command: |
            cd base
            make build
      - run:
          name: Build, Test and Release
          command: |
            cd << parameters.dir >>
            make build REGISTRY=skpr/php-<< parameters.executor >> ARCH=<< parameters.executor >> VERSION=<< parameters.version >>
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              make push REGISTRY=skpr/php-<< parameters.executor >> VERSION=<< parameters.version >>
            fi

  build_solr:
    parameters:
      executor:
        type: string
      solr_image:
        type: string
        default: ""
      solr_version:
        type: string
        default: ""
      search_api_solr_version:
        type: string
        default: ""
    machine: true
    executor: << parameters.executor >>
    steps:
      - checkout
      - run:
          name: "Build: Base Image"
          command: |
            cd base
            make build
      - run:
          name: Build, Test and Release
          command: |
            cd solr
            make build SOLR_IMAGE=<< parameters.solr_image >> SOLR_VERSION=<< parameters.solr_version >> SEARCH_API_SOLR_VERSION=<< parameters.search_api_solr_version >>
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              make push SOLR_IMAGE=<< parameters.solr_image >> SOLR_VERSION=<< parameters.solr_version >> SEARCH_API_SOLR_VERSION=<< parameters.search_api_solr_version >>
            fi

workflows:
  build:
    jobs:
      - build:
          matrix:
            parameters:
              executor: *platforms
              dir: *dirs

      - build:
          matrix:
            parameters:
              executor: *platforms
              version: *php_versions

      - build_solr:
          name: build_solr_5.x-1.x
          solr_image: 5.5-slim
          solr_version: 5.x
          search_api_solr_version: 1.x
          matrix:
            parameters:
              executor: *platforms

      - build_solr:
          name: build_solr_7.x-3.x
          solr_image: 7.7-slim
          solr_version: 7.x
          search_api_solr_version: 3.x
          matrix:
            parameters:
              executor: *platforms

      - build_solr:
          name: build_solr_7.x-4.x
          solr_image: 7.7-slim
          solr_version: 7.x
          search_api_solr_version: 4.x
          matrix:
            parameters:
              executor: *platforms

  nightly:
    jobs:
      - build:
          matrix:
            parameters:
              executor: *platforms
              dir: *dirs

      - build_php:
          matrix:
            parameters:
              executor: *platforms
              php_version: *php_versions

    triggers:
      - schedule:
          # Scheduled build for 2am AEST nightly.
          cron: "0 15 * * *"
          filters:
            branches:
              only:
                - master
